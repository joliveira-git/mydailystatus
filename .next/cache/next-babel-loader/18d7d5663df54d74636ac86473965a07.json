{"ast":null,"code":"var _jsxFileName = \"/home/joliveira/Documents/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    console.log(props);\n\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // ao autenticar é gerado um cookie, que chamamos de sessão pq vai expirar\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + 1 + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    console.log(todaysCheckin);\n    let forceCreate = true;\n\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/joliveira/Documents/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","console","log","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAG,CAACA,KAAK,CAACG,MAAV,EAAiB;AACbN,MAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACH,KAFD,MAEM,IAAGJ,KAAK,CAACK,WAAT,EAAqB;AACvBR,MAAAA,MAAM,CAACO,IAAP,CAAY,gBAAZ;AACH;AACJ,GAPQ,CAAT;;AAQA,MAAI,CAACJ,KAAK,CAACG,MAAP,IAAiBH,KAAK,CAACK,WAA3B,EAAuC;AACnC,WAAO,IAAP;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeP,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAnBD;;AAqBA,eAAeD,GAAf;AACA,OAAO,eAAeS,kBAAf,CAAkC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAlC,EAA6C;AAChD;AACA,QAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAW;AACP,UAAME,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA6C,CAA7C,GAAiD,GAAjD,GAAuDJ,KAAK,CAACK,OAAN,EAA3E;AACA,UAAMC,aAAa,GAAG,MAAMrB,EAAE,CACzBsB,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnBN,WAFmB,EAGvBK,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBV,OAAO,CAACW,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAMA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,aAAZ;AACA,QAAId,WAAW,GAAG,IAAlB;;AACA,QAAGoB,UAAH,EAAc;AACV;AACApB,MAAAA,WAAW,GAAG,KAAd;AACH;;AACD,WAAM;AACFL,MAAAA,KAAK,EAAC;AACFG,QAAAA,MAAM,EAAE,IADN;AAEFmB,QAAAA,IAAI,EAAEX,OAAO,CAACW,IAFZ;AAGFjB,QAAAA;AAHE;AADJ,KAAN;AAOH;;AACD,SAAM;AACFL,IAAAA,KAAK,EAAC;AACFG,MAAAA,MAAM,EAAE,KADN;AAEFmB,MAAAA,IAAI,EAAE;AAFJ;AADJ,GAAN;AAMH","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\n\nconst App = (props) => {\n    useEffect(()=>{\n        console.log(props)\n        if(!props.isAuth){\n            router.push('/')\n        }else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if (!props.isAuth || props.forceCreate){\n        return null\n    }\n\n    return (\n        <div>\n            <h1>App</h1>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\nexport async function getServerSideProps({req, res}){\n    // ao autenticar é gerado um cookie, que chamamos de sessão pq vai expirar\n    const session = await auth0.getSession(req)\n    if(session){\n        const today = new Date();\n        const currentDate = today.getFullYear() + '-' + today.getMonth()+1 + '-' + today.getDate();\n        const todaysCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todaysData = todaysCheckin.data()\n        console.log(todaysCheckin)\n        let forceCreate = true\n        if(todaysData){\n            //pode ver os outros checkins\n            forceCreate = false\n        }\n        return{\n            props:{\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return{\n        props:{\n            isAuth: false,\n            user: { }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}